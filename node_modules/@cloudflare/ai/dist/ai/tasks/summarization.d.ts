import { Tensor } from "../tensor";
import { AiTask } from "../ai";
export type AiSummarizationInput = {
    input_text: string;
    max_length?: number;
};
export type AiSummarizationOutput = {
    summary: string;
};
export declare class AiSummarization implements AiTask {
    private modelSettings;
    inputs: AiSummarizationInput;
    preProcessedInputs: any;
    postProcessedOutputs: AiSummarizationOutput;
    tensors: Array<Tensor<any>>;
    schema: {
        input: {
            type: string;
            properties: {
                input_text: {
                    type: string;
                };
                max_length: {
                    type: string;
                    default: number;
                };
            };
            required: string[];
        };
        output: {
            type: string;
            contentType: string;
            properties: {
                summary: {
                    type: string;
                };
            };
        };
    };
    constructor(inputs: AiSummarizationInput, modelSettings: any);
    preProcessing(): void;
    generateTensors(preProcessedInputs: any): any;
    postProcessing(response: any): void;
}
//# sourceMappingURL=summarization.d.ts.map