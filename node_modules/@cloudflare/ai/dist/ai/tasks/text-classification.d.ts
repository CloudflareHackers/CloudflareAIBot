import { Tensor } from "../tensor";
import { AiTask } from "../ai";
export type AiTextClassificationInput = {
    text: string;
};
export type AiTextClassificationOutput = {
    score?: number;
    label?: string;
}[];
export declare class AiTextClassification implements AiTask {
    private modelSettings;
    inputs: AiTextClassificationInput;
    preProcessedInputs: any;
    postProcessedOutputs: AiTextClassificationOutput;
    tensors: Array<Tensor<any>>;
    schema: {
        input: {
            type: string;
            properties: {
                text: {
                    type: string;
                };
            };
            required: string[];
        };
        output: {
            type: string;
            contentType: string;
            items: {
                type: string;
                properties: {
                    score: {
                        type: string;
                    };
                    label: {
                        type: string;
                    };
                };
            };
        };
    };
    constructor(inputs: AiTextClassificationInput, modelSettings: any);
    preProcessing(): void;
    generateTensors(preProcessedInputs: any): any;
    postProcessing(response: any): void;
}
//# sourceMappingURL=text-classification.d.ts.map