import { Tensor } from "../tensor";
import { AiTask } from "../ai";
export type AiTranslationInput = {
    text: string;
    target_lang: string;
    source_lang?: string;
};
export type AiTranslationOutput = {
    translated_text?: string;
};
export declare class AiTranslation implements AiTask {
    private modelSettings;
    inputs: AiTranslationInput;
    preProcessedInputs: any;
    postProcessedOutputs: AiTranslationOutput;
    tensors: Array<Tensor<any>>;
    schema: {
        input: {
            type: string;
            properties: {
                text: {
                    type: string;
                };
                source_lang: {
                    type: string;
                    default: string;
                };
                target_lang: {
                    type: string;
                };
            };
            required: string[];
        };
        output: {
            type: string;
            contentType: string;
            properties: {
                translated_text: {
                    type: string;
                };
            };
        };
    };
    constructor(inputs: AiTranslationInput, modelSettings: any);
    preProcessing(): void;
    generateTensors(preProcessedInputs: any): any;
    postProcessing(response: any): void;
}
//# sourceMappingURL=translation.d.ts.map