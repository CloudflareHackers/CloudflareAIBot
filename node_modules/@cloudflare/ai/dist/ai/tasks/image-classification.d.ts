import { Tensor } from "../tensor";
import { AiTask } from "../ai";
export type AiImageClassificationInput = {
    image: number[];
};
export type AiImageClassificationOutput = {
    score?: number;
    label?: string;
}[];
export declare class AiImageClassification implements AiTask {
    private modelSettings;
    inputs: AiImageClassificationInput;
    preProcessedInputs: any;
    postProcessedOutputs: AiImageClassificationOutput;
    tensors: Array<Tensor<any>>;
    schema: {
        input: {
            oneOf: ({
                type: string;
                format: string;
                properties?: undefined;
            } | {
                type: string;
                properties: {
                    image: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                format?: undefined;
            })[];
        };
        output: {
            type: string;
            contentType: string;
            items: {
                type: string;
                properties: {
                    score: {
                        type: string;
                    };
                    label: {
                        type: string;
                    };
                };
            };
        };
    };
    constructor(inputs: AiImageClassificationInput, modelSettings: any);
    preProcessing(): void;
    generateTensors(preProcessedInputs: any): any;
    postProcessing(response: any): void;
}
//# sourceMappingURL=image-classification.d.ts.map